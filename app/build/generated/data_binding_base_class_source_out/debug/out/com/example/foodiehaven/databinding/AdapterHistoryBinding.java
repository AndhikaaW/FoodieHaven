// Generated by view binder compiler. Do not edit!
package com.example.foodiehaven.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.foodiehaven.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AdapterHistoryBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView alamatPelanggan;

  @NonNull
  public final TextView namaPelanggan;

  @NonNull
  public final TextView noTelpPelanggan;

  @NonNull
  public final TextView tanggalPesan;

  private AdapterHistoryBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView alamatPelanggan, @NonNull TextView namaPelanggan,
      @NonNull TextView noTelpPelanggan, @NonNull TextView tanggalPesan) {
    this.rootView = rootView;
    this.alamatPelanggan = alamatPelanggan;
    this.namaPelanggan = namaPelanggan;
    this.noTelpPelanggan = noTelpPelanggan;
    this.tanggalPesan = tanggalPesan;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AdapterHistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AdapterHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.adapter_history, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AdapterHistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.alamatPelanggan;
      TextView alamatPelanggan = ViewBindings.findChildViewById(rootView, id);
      if (alamatPelanggan == null) {
        break missingId;
      }

      id = R.id.namaPelanggan;
      TextView namaPelanggan = ViewBindings.findChildViewById(rootView, id);
      if (namaPelanggan == null) {
        break missingId;
      }

      id = R.id.noTelpPelanggan;
      TextView noTelpPelanggan = ViewBindings.findChildViewById(rootView, id);
      if (noTelpPelanggan == null) {
        break missingId;
      }

      id = R.id.tanggalPesan;
      TextView tanggalPesan = ViewBindings.findChildViewById(rootView, id);
      if (tanggalPesan == null) {
        break missingId;
      }

      return new AdapterHistoryBinding((ConstraintLayout) rootView, alamatPelanggan, namaPelanggan,
          noTelpPelanggan, tanggalPesan);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
