// Generated by view binder compiler. Do not edit!
package com.example.foodiehaven.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.foodiehaven.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityOrderActBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button btnPesan;

  @NonNull
  public final EditText countPaket;

  @NonNull
  public final TextView hargaMenu;

  @NonNull
  public final CardView imgAdd;

  @NonNull
  public final CardView imgMinus;

  @NonNull
  public final TextView namaMenu;

  @NonNull
  public final TextView totalHarga;

  private ActivityOrderActBinding(@NonNull RelativeLayout rootView, @NonNull Button btnPesan,
      @NonNull EditText countPaket, @NonNull TextView hargaMenu, @NonNull CardView imgAdd,
      @NonNull CardView imgMinus, @NonNull TextView namaMenu, @NonNull TextView totalHarga) {
    this.rootView = rootView;
    this.btnPesan = btnPesan;
    this.countPaket = countPaket;
    this.hargaMenu = hargaMenu;
    this.imgAdd = imgAdd;
    this.imgMinus = imgMinus;
    this.namaMenu = namaMenu;
    this.totalHarga = totalHarga;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityOrderActBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityOrderActBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_order_act, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityOrderActBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnPesan;
      Button btnPesan = ViewBindings.findChildViewById(rootView, id);
      if (btnPesan == null) {
        break missingId;
      }

      id = R.id.countPaket;
      EditText countPaket = ViewBindings.findChildViewById(rootView, id);
      if (countPaket == null) {
        break missingId;
      }

      id = R.id.hargaMenu;
      TextView hargaMenu = ViewBindings.findChildViewById(rootView, id);
      if (hargaMenu == null) {
        break missingId;
      }

      id = R.id.imgAdd;
      CardView imgAdd = ViewBindings.findChildViewById(rootView, id);
      if (imgAdd == null) {
        break missingId;
      }

      id = R.id.imgMinus;
      CardView imgMinus = ViewBindings.findChildViewById(rootView, id);
      if (imgMinus == null) {
        break missingId;
      }

      id = R.id.namaMenu;
      TextView namaMenu = ViewBindings.findChildViewById(rootView, id);
      if (namaMenu == null) {
        break missingId;
      }

      id = R.id.totalHarga;
      TextView totalHarga = ViewBindings.findChildViewById(rootView, id);
      if (totalHarga == null) {
        break missingId;
      }

      return new ActivityOrderActBinding((RelativeLayout) rootView, btnPesan, countPaket, hargaMenu,
          imgAdd, imgMinus, namaMenu, totalHarga);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
